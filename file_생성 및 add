vim A.txt : A라는 이름의 파일 생성
- i를 입력해 입력 모드로 변경이 가능하다.
- 나갈때에는 esc + :wq 입력(w : 저장 , q: 종료)

작성한 파일 내용을 다시 보고 싶으면 
1. cat A.txt
2. vim A.txt로 확인이 가능하다. 

내가 생성한 A라는 이름의 파일은 git이 관리하는 디렉토리에 들어가게 된다.
하지만 내가 개별적인 명령어로 관리하라고 하지 전까지는 이 파일을 관리하지 않고 무시한다. 
git status : 저장소의 상태 확인용 명령어
여기서 untracked files에 A가 들어가 있는 이유이다. 

이를 관리하라고 git에게 알려주는 명령어 : add 이다
git add A.txt를 입력하면 git이 A.txt를 새로운 파일로 인식하기 시작한다.

git add를 하고 나서는 commit이라는 명령어를 추가적으로 해줘야 한다. 
git commit
Git은 각 커밋에 다음을 식별하는 SHA 또는 해시라는 고유 ID를 할당합니다.

-특정 변경 내용
-변경된 시점
-변경 내용을 만든 사람
커밋할 때 변경 내용을 간략하게 설명하는 커밋 메시지를 포함해야 합니다.

git log : 내가 만든 commit들이 쫙 나온다. (commit 내용과 함께 나온다)

- add와 commit은 파일의 내용이 바뀌거나 파일을 새로 생성할때마다 해줘어야 한다.

commit을 할때 
git commit -a 라고 하면 (자동으로 파일이 add가 되고 바로 commit message작성하는 부분으로 넘어간다.)
git commit -am "a" : a가 commit message가 되고 자동으로 add와 commit이 된다. 
git commit -m "a" : a가 commit message가 된다.(add는 우리가 해줘야 한다.)

여기서 어떤 파일을 commit 하기 위해서는 먼저 파일이 add가 되어야 한다. 
- add을 통해 파일이 commit 대기 상태가 된다 
- 그리고 commit을 하면 commit 대기 상태에 있는 것이 버전에 올라간다. 
commit 대기 상태 --> staging area라고 부른다. 
repository는 commit이 된 결과가 저장 되는 곳이다. 


